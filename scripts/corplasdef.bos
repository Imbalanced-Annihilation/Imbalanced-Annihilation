#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pumpingrotor, sphere, top5, smoke1, smoke2, smoke3, smoke4,
       top1, top2, top3, top4, smoke5, smoke6, smoke7, smoke8,
       teeth1, teeth2, teeth3, teeth4, globe1, globe2, globe3, globe4;

static-var  statechg_DesiredState, statechg_StateChanging;

// Signal definitions
#define SIG_ACTIVATE			2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

OpenYard()
{
	set YARD_OPEN to 1;
	while( !get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 1;
	}
	set BUGGER_OFF to 0;
}

CloseYard()
{
	set YARD_OPEN to 0;
	while( get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 0;
	}
	set BUGGER_OFF to 0;
}

activatescr()
{
	if( TRUE )
	{
		move top1 to y-axis [0.000000] now;
		move top1 to y-axis [4.000000] speed [1.000000];
		move top2 to y-axis [0.000000] now;
		move top2 to y-axis [4.000000] speed [1.000000];
		move top3 to y-axis [0.000000] now;
		move top3 to y-axis [4.000000] speed [1.000000];
		move top4 to y-axis [0.000000] now;
		move top4 to y-axis [4.000000] speed [1.000000];
		turn teeth1 to x-axis <25.000000> speed <3.000000>;
		turn teeth2 to z-axis <25.000000> speed <3.000000>;
		turn teeth3 to x-axis <-25.000000> speed <3.000000>;
		turn teeth4 to z-axis <-25.000000> speed <3.000000>;
		spin sphere around y-axis speed <-20.000000>;
		sleep 600;
		spin sphere around y-axis speed <-50.000000>;
		sleep 600;
		spin pumpingrotor around y-axis speed <20.000000>;
		sleep 100;
		spin sphere around y-axis speed <-70.000000>;
		sleep 600;
		spin sphere around y-axis speed <-90.000000>;
		sleep 600;
		spin sphere around y-axis speed <-110.000000>;
		sleep 600;
		spin sphere around y-axis speed <-130.000000>;
		sleep 600;
		spin sphere around y-axis speed <-150.000000>;
		sleep 100;
		spin pumpingrotor around y-axis speed <35.000000>;
		sleep 600;
	}
}

deactivatescr()
{
	if( TRUE )
	{
		move top1 to y-axis [0.000000] speed [2.000000];
		move top2 to y-axis [0.000000] speed [2.000000];
		move top3 to y-axis [0.000000] speed [2.000000];
		move top4 to y-axis [0.000000] speed [2.000000];
		turn teeth1 to x-axis <0.000000> speed <5.000000>;
		turn teeth2 to z-axis <0.000000> speed <5.000000>;
		turn teeth3 to x-axis <0.000000> speed <5.000000>;
		turn teeth4 to z-axis <0.000000> speed <5.000000>;
		spin sphere around y-axis speed <-110.000000>;
		sleep 600;
		spin sphere around y-axis speed <-80.000000>;
		sleep 600;
		spin sphere around y-axis speed <-50.000000>;
		sleep 600;
		spin sphere around y-axis speed <0.000000>;
		sleep 600;
		spin pumpingrotor around y-axis speed <20.000000>;
	}
}

Go()
{
	call-script activatescr();
}

Stop()
{
	stop-spin sphere around y-axis;
	wait-for-turn sphere around y-axis;
	call-script deactivatescr();
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	dont-cache top1;
	dont-cache top2;
	dont-cache top3;
	dont-cache top4;
	dont-cache top5;
	dont-cache sphere;
	dont-cache globe1;
	dont-cache globe2;
	dont-cache globe3;
	dont-cache globe4;
	start-script SmokeUnit();
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	/*while( TRUE )
	{
		emit-sfx 256 | 1 from smoke1;
		emit-sfx 256 | 1 from smoke2;
		emit-sfx 256 | 1 from smoke3;
		emit-sfx 256 | 1 from smoke4;
		emit-sfx 256 | 1 from smoke5;
		emit-sfx 256 | 1 from smoke6;
		emit-sfx 256 | 1 from smoke7;
		emit-sfx 256 | 1 from smoke8;
		sleep 250;
		emit-sfx 256 | 1 from smoke1;
		emit-sfx 256 | 1 from smoke2;
		emit-sfx 256 | 1 from smoke3;
		emit-sfx 256 | 1 from smoke4;
		emit-sfx 256 | 1 from smoke5;
		emit-sfx 256 | 1 from smoke6;
		emit-sfx 256 | 1 from smoke7;
		emit-sfx 256 | 1 from smoke8;
		sleep 250;
		emit-sfx 256 | 1 from smoke1;
		emit-sfx 256 | 1 from smoke2;
		emit-sfx 256 | 1 from smoke3;
		emit-sfx 256 | 1 from smoke4;
		emit-sfx 256 | 1 from smoke5;
		emit-sfx 256 | 1 from smoke6;
		emit-sfx 256 | 1 from smoke7;
		emit-sfx 256 | 1 from smoke8;
		sleep 250;
	}*/
}

Deactivate()
{
	start-script RequestState(1);
	signal SIG_ACTIVATE;
}

SweetSpot(piecenum)
{
	piecenum = sphere;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type SHATTER | EXPLODE_ON_HIT | BITMAP4;
		explode pumpingrotor type SHATTER | EXPLODE_ON_HIT | BITMAP4;
		explode sphere type SHATTER | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type SHATTER | EXPLODE_ON_HIT | BITMAP4;
		explode sphere type SHATTER | EXPLODE_ON_HIT | BITMAP4;
		explode pumpingrotor type SHATTER | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type SHATTER | EXPLODE_ON_HIT | BITMAP4;
		explode sphere type SHATTER | EXPLODE_ON_HIT | BITMAP4;
		explode pumpingrotor type SHATTER | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode base type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode pumpingrotor type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode sphere type SHATTER | EXPLODE_ON_HIT | BITMAP1;
}
